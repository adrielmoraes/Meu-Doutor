
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isUserAuthenticated(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    function isDoctorAuthenticated() {
      return request.auth != null && exists(/databases/$(database)/documents/doctors/$(request.auth.uid));
    }

    // Patients can only read/write their own data.
    // Doctors can read all patients' data for their dashboard.
    match /patients/{patientId} {
      // TEMPORARY: Allow creation and updates for debugging server-side operations
      allow create, update: if true;
      allow read: if isUserAuthenticated(patientId) || isDoctorAuthenticated();
      
      // Exams subcollection rules
      match /exams/{examId} {
        allow read: if isUserAuthenticated(patientId) || isDoctorAuthenticated();
        allow create, update, delete: if isUserAuthenticated(patientId) || isDoctorAuthenticated();
      }
    }
    
    // Doctors can only read/write their own data
    match /doctors/{doctorId} {
        allow read: if isUserAuthenticated(doctorId) || isDoctorAuthenticated();
        allow update: if isUserAuthenticated(doctorId);
        // Allow creation for the registration flow
        allow create: if request.auth == null;
    }

    // Authentication collections should NOT be client-readable, but server-side needs write.
    match /patientAuth/{userId} {
      // TEMPORARY: Allow write for debugging server-side operations
      allow read, write: if true; 
    }
    
    match /doctorAuth/{userId} {
      allow read, write: if false;
    }

    // Appointments can be read by the involved patient or doctor
    // Appointments can be created by the patient.
    match /appointments/{appointmentId} {
      allow read: if request.auth != null && (request.auth.uid == resource.data.patientId || request.auth.uid == resource.data.doctorId);
      allow create: if request.auth != null && request.auth.uid == request.resource.data.patientId;
      // Updates can be done by doctor (e.g., to change status)
      allow update: if isDoctorAuthenticated();
      allow delete: if false; // Prevent accidental deletion
    }
  }
}
