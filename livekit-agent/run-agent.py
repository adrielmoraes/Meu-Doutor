#!/usr/bin/env python
"""
MediAI LiveKit Agent - Simplified Launcher
Displays configuration and runs the agent.
"""

import os
import subprocess
import sys

# Load environment variables
LIVEKIT_URL = os.getenv('LIVEKIT_URL', 'wss://mediai-livikit-gmavbnbs.livekit.cloud')
LIVEKIT_API_KEY = os.getenv('LIVEKIT_API_KEY')
LIVEKIT_API_SECRET = os.getenv('LIVEKIT_API_SECRET')
GEMINI_API_KEY = os.getenv('GEMINI_API_KEY')
TAVUS_API_KEY = os.getenv('TAVUS_API_KEY')
TAVUS_REPLICA_ID = os.getenv('TAVUS_REPLICA_ID')
TAVUS_PERSONA_ID = os.getenv('TAVUS_PERSONA_ID')
DATABASE_URL = os.getenv('DATABASE_URL')
OPENAI_API_KEY = os.getenv('OPENAI_API_KEY')

print("üöÄ MediAI LiveKit Agent Launcher")
print("=" * 50)
print()

# Validate required credentials
errors = []
if not LIVEKIT_API_KEY:
    errors.append("‚ùå LIVEKIT_API_KEY n√£o configurado")
if not LIVEKIT_API_SECRET:
    errors.append("‚ùå LIVEKIT_API_SECRET n√£o configurado")
if not OPENAI_API_KEY:
    print("‚ö†Ô∏è  OPENAI_API_KEY n√£o configurado - necess√°rio para STT/LLM/TTS")
    errors.append("‚ùå OPENAI_API_KEY n√£o configurado")

if errors:
    print("Erro: Credenciais ausentes:")
    for error in errors:
        print(f"  {error}")
    print()
    print("Configure as vari√°veis de ambiente no Replit.")
    print()
    print("Para obter uma OPENAI_API_KEY:")
    print("  1. Acesse https://platform.openai.com/api-keys")
    print("  2. Crie uma nova API key")
    print("  3. Adicione aos Secrets do Replit")
    sys.exit(1)

# Display configuration
print("‚úÖ Configura√ß√£o:")
print(f"  ‚Ä¢ LiveKit URL: {LIVEKIT_URL}")
print(f"  ‚Ä¢ LiveKit API Key: {LIVEKIT_API_KEY[:10]}...")
print(f"  ‚Ä¢ OpenAI API: {'‚úÖ Configurado' if OPENAI_API_KEY else '‚ùå Ausente'}")

if TAVUS_API_KEY and TAVUS_REPLICA_ID:
    print(f"  ‚Ä¢ Tavus Avatar: üé≠ ATIVADO (Replica: {TAVUS_REPLICA_ID})")
else:
    print("  ‚Ä¢ Tavus Avatar: ‚ö™ Desativado (apenas √°udio)")

if DATABASE_URL:
    print("  ‚Ä¢ Database: ‚úÖ Configurado")
else:
    print("  ‚Ä¢ Database: ‚ö†Ô∏è  N√£o configurado")

print()
print("=" * 50)
print("üé≠ Aguardando pacientes na sala LiveKit...")
print("   O avatar Tavus entrar√° automaticamente quando")
print("   um paciente iniciar uma consulta.")
print("=" * 50)
print()

# Run the agent directly
try:
    subprocess.run([sys.executable, "agent.py", "start"], check=True)
except KeyboardInterrupt:
    print("\nüõë Agent interrompido pelo usu√°rio")
except subprocess.CalledProcessError as e:
    print(f"‚ùå Erro ao executar agent: {e}")
    sys.exit(1)
