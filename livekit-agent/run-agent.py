#!/usr/bin/env python
"""
MediAI LiveKit Agent - Launcher
100% Gemini API powered medical voice assistant with Tavus avatar.
"""

import os
import subprocess
import sys

# Load environment variables
LIVEKIT_URL = os.getenv('LIVEKIT_URL', 'wss://mediai-livikit-gmavbnbs.livekit.cloud')
LIVEKIT_API_KEY = os.getenv('LIVEKIT_API_KEY')
LIVEKIT_API_SECRET = os.getenv('LIVEKIT_API_SECRET')
GEMINI_API_KEY = os.getenv('GEMINI_API_KEY')
TAVUS_API_KEY = os.getenv('TAVUS_API_KEY')
TAVUS_REPLICA_ID = os.getenv('TAVUS_REPLICA_ID')
TAVUS_PERSONA_ID = os.getenv('TAVUS_PERSONA_ID')
BEY_API_KEY = os.getenv('BEY_API_KEY')
BEY_AVATAR_ID = os.getenv('BEY_AVATAR_ID')
DATABASE_URL = os.getenv('DATABASE_URL')

print("üöÄ MediAI LiveKit Agent - 100% Gemini Powered")
print("=" * 60)
print()

# Validate required credentials
errors = []
if not LIVEKIT_API_KEY:
    errors.append("‚ùå LIVEKIT_API_KEY n√£o configurado")
if not LIVEKIT_API_SECRET:
    errors.append("‚ùå LIVEKIT_API_SECRET n√£o configurado")
if not GEMINI_API_KEY:
    errors.append("‚ùå GEMINI_API_KEY n√£o configurado")

if errors:
    print("‚ö†Ô∏è  Erro: Credenciais ausentes:")
    for error in errors:
        print(f"  {error}")
    print()
    print("Configure as vari√°veis de ambiente no Replit.")
    sys.exit(1)

# Display configuration
print("‚úÖ Configura√ß√£o LiveKit Agent:")
print(f"  ‚Ä¢ LiveKit URL: {LIVEKIT_URL}")
if LIVEKIT_API_KEY:
    print(f"  ‚Ä¢ LiveKit API Key: {LIVEKIT_API_KEY[:10]}...")
else:
    print("  ‚Ä¢ LiveKit API Key: N√£o configurado")
print(f"  ‚Ä¢ Gemini API: ‚úÖ Configurado (100% Gemini powered)")

print("  ‚Ä¢ Avatar Providers Dispon√≠veis:")

# Tavus status
if TAVUS_API_KEY and TAVUS_REPLICA_ID and TAVUS_PERSONA_ID:
    print(f"    - Tavus: üé≠ CONFIGURADO")
    print(f"      Replica ID: {TAVUS_REPLICA_ID}")
    print(f"      Persona ID: {TAVUS_PERSONA_ID}")
else:
    print("    - Tavus: ‚ö™ N√£o configurado")
    print(f"      API Key: {'‚úì' if TAVUS_API_KEY else '‚úó'}")
    print(f"      Replica ID: {'‚úì' if TAVUS_REPLICA_ID else '‚úó'}")
    print(f"      Persona ID: {'‚úì' if TAVUS_PERSONA_ID else '‚úó'}")

# BEY status
if BEY_API_KEY:
    print(f"    - Beyond Presence (BEY): üé≠ CONFIGURADO")
    if BEY_AVATAR_ID:
        print(f"      Avatar ID: {BEY_AVATAR_ID}")
    else:
        print(f"      Avatar ID: usando padr√£o")
else:
    print("    - Beyond Presence (BEY): ‚ö™ N√£o configurado")

print("  ‚Ä¢ Avatar Ativo: Definido no Admin Panel (banco de dados)")

if DATABASE_URL:
    print("  ‚Ä¢ Database: ‚úÖ Configurado")
else:
    print("  ‚Ä¢ Database: ‚ö†Ô∏è  N√£o configurado")

print()
print("=" * 60)
print("üé≠ Iniciando MediAI Agent...")
print("   üì° Aguardando pacientes na sala LiveKit...")
print("   üé• O avatar Tavus aparecer√° automaticamente quando")
print("   üè• um paciente iniciar uma consulta!")
print("   üß† 100% Gemini API (STT + LLM + TTS)")
print("=" * 60)
print()

# Run the agent
try:
    subprocess.run([sys.executable, "agent.py", "start"], check=True)
except KeyboardInterrupt:
    print("\nüõë Agent interrompido pelo usu√°rio")
except subprocess.CalledProcessError as e:
    print(f"‚ùå Erro ao executar agent: {e}")
    sys.exit(1)
