#!/usr/bin/env python
"""
MediAI LiveKit Agent - Launcher
Displays configuration and runs the agent with Tavus avatar.
"""

import os
import subprocess
import sys

# Load environment variables
LIVEKIT_URL = os.getenv('LIVEKIT_URL', 'wss://mediai-livikit-gmavbnbs.livekit.cloud')
LIVEKIT_API_KEY = os.getenv('LIVEKIT_API_KEY')
LIVEKIT_API_SECRET = os.getenv('LIVEKIT_API_SECRET')
TAVUS_API_KEY = os.getenv('TAVUS_API_KEY')
TAVUS_REPLICA_ID = os.getenv('TAVUS_REPLICA_ID')
TAVUS_PERSONA_ID = os.getenv('TAVUS_PERSONA_ID')
DATABASE_URL = os.getenv('DATABASE_URL')
OPENAI_API_KEY = os.getenv('OPENAI_API_KEY')

print("üöÄ MediAI LiveKit Agent")
print("=" * 60)
print()

# Validate required credentials
errors = []
if not LIVEKIT_API_KEY:
    errors.append("‚ùå LIVEKIT_API_KEY n√£o configurado")
if not LIVEKIT_API_SECRET:
    errors.append("‚ùå LIVEKIT_API_SECRET n√£o configurado")
if not OPENAI_API_KEY:
    errors.append("‚ùå OPENAI_API_KEY n√£o configurado (tempor√°rio)")

if errors:
    print("‚ö†Ô∏è  Erro: Credenciais ausentes:")
    for error in errors:
        print(f"  {error}")
    print()
    print("NOTA: O sistema usa Gemini API mas temporariamente precisa")
    print("de OpenAI para STT/TTS at√© implementarmos os providers Gemini.")
    print()
    print("Solicite OPENAI_API_KEY ao usu√°rio.")
    sys.exit(1)

# Display configuration
print("‚úÖ Configura√ß√£o LiveKit Agent:")
print(f"  ‚Ä¢ LiveKit URL: {LIVEKIT_URL}")
print(f"  ‚Ä¢ LiveKit API Key: {LIVEKIT_API_KEY[:10]}...")
print(f"  ‚Ä¢ OpenAI API: ‚úÖ Configurado (tempor√°rio)")

if TAVUS_API_KEY and TAVUS_REPLICA_ID and TAVUS_PERSONA_ID:
    print(f"  ‚Ä¢ Tavus Avatar: üé≠ ATIVADO")
    print(f"    - Replica ID: {TAVUS_REPLICA_ID}")
    print(f"    - Persona ID: {TAVUS_PERSONA_ID}")
else:
    print("  ‚Ä¢ Tavus Avatar: ‚ö™ Desativado (apenas √°udio)")
    print(f"    - API Key: {'‚úì' if TAVUS_API_KEY else '‚úó'}")
    print(f"    - Replica ID: {'‚úì' if TAVUS_REPLICA_ID else '‚úó'}")
    print(f"    - Persona ID: {'‚úì' if TAVUS_PERSONA_ID else '‚úó'}")

if DATABASE_URL:
    print("  ‚Ä¢ Database: ‚úÖ Configurado")
else:
    print("  ‚Ä¢ Database: ‚ö†Ô∏è  N√£o configurado")

print()
print("=" * 60)
print("üé≠ Iniciando LiveKit Agent...")
print("   Aguardando pacientes na sala LiveKit...")
print("   O avatar Tavus aparecer√° automaticamente quando")
print("   um paciente iniciar uma consulta!")
print("=" * 60)
print()

# Run the agent
try:
    subprocess.run([sys.executable, "agent.py", "start"], check=True)
except KeyboardInterrupt:
    print("\nüõë Agent interrompido pelo usu√°rio")
except subprocess.CalledProcessError as e:
    print(f"‚ùå Erro ao executar agent: {e}")
    sys.exit(1)
